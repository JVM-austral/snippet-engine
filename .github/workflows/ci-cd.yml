permissions:
  contents: read
  packages: write
name: Java CI

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew build

        env:
          ORG_NAME: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USERNAME: ${{ github.actor }}

  push_to_registry:
    needs: build
    runs-on: ubuntu-latest

    env:
      ORG_NAME: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      TOKEN: ${{ secrets.GITHUB_TOKEN }}
      USERNAME: ${{ github.actor }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Short SHA
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 8
      - name: Set lowercase org and repo
        run: |
          ORG=$(echo "$GITHUB_REPOSITORY_OWNER" | tr '[:upper:]' '[:lower:]')
          REPO=$(echo "${GITHUB_REPOSITORY#*/}" | tr '[:upper:]' '[:lower:]')
          echo "ORG_NAME=$ORG" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO" >> $GITHUB_ENV


      - name: Set up Docker Buildx (multi-platform / builder)
        uses: docker/setup-buildx-action@v2


      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}:latest
            ghcr.io/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}:${{ github.sha }}
          build-args: |
            USERNAME=${{ github.actor }}
            TOKEN=${{ secrets.GITHUB_TOKEN }}
  deploy:
    needs: push_to_registry
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            cd ~/infrastructure
            ./deploy.sh
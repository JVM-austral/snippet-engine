plugins {
	id 'org.jetbrains.kotlin.jvm' version '2.1.0'
	id 'org.jetbrains.kotlin.plugin.spring' version '2.1.0'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.jetbrains.kotlin.plugin.jpa' version '2.1.0'
	id 'jacoco'
	id 'maven-publish'
	id "org.jlleitschuh.gradle.ktlint" version "12.1.1"
}


group = 'ingsis'
version = '0.0.1-SNAPSHOT'
description = 'Microservice example for SnippetSearcher'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}
springBoot {
    mainClass.set("engine.SnippetEngineApplicationKt")
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.JVM-austral:ast:1.0.171'
    implementation 'org.JVM-austral:cli:1.0.171'
    implementation 'org.JVM-austral:common:1.0.171'
    implementation 'org.JVM-austral:formatter:1.0.171'
    implementation 'org.JVM-austral:interpreter:1.0.171'
    implementation 'org.JVM-austral:lexer:1.0.171'
    implementation 'org.JVM-austral:linter:1.0.171'
    implementation 'org.JVM-austral:parser:1.0.171'
    implementation 'org.JVM-austral:runner:1.0.171'
    implementation 'org.JVM-austral:token:1.0.171'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("com.h2database:h2")
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testImplementation 'org.mockito:mockito-inline:5.2.0'
	testImplementation 'org.mockito.kotlin:mockito-kotlin:5.3.1'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation("org.springframework.boot:spring-boot-starter-security")
	implementation("io.jsonwebtoken:jjwt-api:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

}
repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/JVM-austral/tp-ingsis-interpreter")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
        }
    }
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

allOpen {
	annotation 'jakarta.persistence.Entity'
	annotation 'jakarta.persistence.MappedSuperclass'
	annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
	useJUnitPlatform()
}

ktlint {
	version.set("1.4.1")
	android.set(false)
	outputColorName.set("RED")
	ignoreFailures.set(false)
	filter {
		exclude("**/build/**")
		include("**/src/**/*.kt")
	}
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
}

jacocoTestCoverageVerification {
	dependsOn test
	violationRules {
		rule {
			limit {
				minimum = 0.0
			}
		}
	}
}

tasks.named('check') {
	dependsOn 'ktlintCheck', 'jacocoTestCoverageVerification'
}